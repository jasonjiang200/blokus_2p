from pieces import *

class Player():
    
    def __init__(self, square):
        self.square = square
        self.onFirst = True
        self.pieces = [
            Piece('I1', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0]
            ]),
            Piece('I2', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0]
            ]),
            Piece('I3', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-2, 0]
            ]),
            Piece('I4', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [1, 0], [-2, 0]
            ]),
            Piece('I5', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' ']
            ], [
                [0, 0], [-2, 0], [-1, 0], [1, 0], [2, 0]
            ]),
            Piece('L3', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [0, 1]
            ]),
            Piece('L4', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-2, 0], [0, 1]
            ]),
            Piece('L5', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-2, 0], [-1, 0], [1, 0], [1, 1]
            ]),
            Piece('T4', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', '▣', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [0, 1], [0, -1]
            ]),
            Piece('F', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-1, 1], [1, 0], [0, -1]
            ]), 
            Piece('N', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', '▣'],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, -1], [-1, 0], [0, 1], [0, 2]
            ]),
            Piece('O', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-1, 1], [0, 1]
            ]),
            Piece('P', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-1, 1], [0, 1], [1, 0]
            ]),
            Piece('S4', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [0, -1], [-1, 0], [-1, 1]
            ]),           
            Piece('T', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', '▣', '▣', '▣', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' ']
            ], [
                [0, 0], [0, -1], [0, 1], [1, 0], [2, 0]
            ]),
            Piece('U', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', '▣', ' ', '▣', ' '],
                [' ', '▣', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, -1], [-1, 1], [0, -1], [0, 1]
            ]),
            Piece('V', [
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', '▣'],
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-2, 0], [-1, 0], [0, 1], [0, 2]
            ]),
            Piece('W', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', '▣', ' ', ' ', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, -1], [0, -1], [1, 0], [1, 1]
            ]),
            Piece('X', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', '▣', '▣', '▣', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [1, 0], [0, -1], [0, 1]
            ]),
            Piece('Y', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [0, -1], [1, 0], [2, 0]
            ]),
            Piece('Z', [
                [' ', ' ', ' ', ' ', ' '],
                [' ', '▣', '▣', ' ', ' '],
                [' ', ' ', '▣', ' ', ' '],
                [' ', ' ', '▣', '▣', ' '],
                [' ', ' ', ' ', ' ', ' ']
            ], [
                [0, 0], [-1, 0], [-1, -1], [1, 0], [1, 1]
            ])            
        ]

    def displayRemaining(self):
        print('Pieces Remaining: ', end='')
        for i in range(len(self.pieces) - 1):
            print('{}, '.format(self.pieces[i]), end='')
        print(f'{self.pieces[-1]}.')

    def checkExists(self, tag):
        for piece in self.pieces:
            if piece == tag.upper():
                return True
        return False

    def removePiece(self, tag):
        for i in range(len(self.pieces)):
            if self.pieces[i] == tag.upper():
                self.pieces.pop(i)
                return
    
    def getPiece(self, tag):
        for piece in self.pieces:
            if piece == tag.upper():
                return piece               
